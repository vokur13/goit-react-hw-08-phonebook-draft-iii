{"version":3,"file":"static/js/554.08019801.chunk.js","mappings":"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","sources":["views/ContactsView/ContactsView.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: ${props => `${props.theme.space[3]}px`};\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n  padding: ${props => `${props.theme.space[1]}px`};\n`;\n\nexport const Input = styled.input`\n  width: 75%;\n  padding: ${props => `${props.theme.space[1]}px`};\n  &:not(:last-child) {\n    margin-bottom: ${props => `${props.theme.space[2]}px`};\n  }\n`;\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { Box } from '../Box';\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { Button } from '../Button';\n\nexport const ContactForm = ({ onFormSubmit, isLoading }) => {\n  const nameId = nanoid();\n  const phoneID = nanoid();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    //     watch,\n    formState,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { name: '', number: '' } });\n\n  const onSubmit = data => {\n    onFormSubmit(data);\n  };\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset({ name: '', number: '' });\n    }\n  }, [formState, isSubmitSuccessful, reset]);\n\n  return (\n    <Box\n      display=\"block\"\n      p={2}\n      mb={4}\n      bg=\"bgComponent\"\n      width=\"95%\"\n      borderRadius=\"normal\"\n      boxShadow=\"basic\"\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Label htmlFor={nameId}>Name</Label>\n        <Input\n          id={nameId}\n          type=\"text\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          {...register('name', {\n            required: true,\n            pattern:\n              /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i,\n          })}\n          aria-invalid={errors.name ? 'true' : 'false'}\n        />\n        {errors.name?.type === 'required' && (\n          <p role=\"alert\">Name is required</p>\n        )}\n        <Label htmlFor={phoneID}>Number</Label>\n        <Input\n          id={phoneID}\n          type=\"tel\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          {...register('number', {\n            required: 'Phone number is required',\n            pattern:\n              /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i,\n          })}\n          aria-invalid={errors.number ? 'true' : 'false'}\n        />\n        {errors.number && <p role=\"alert\">{errors.number?.message}</p>}\n        <Button type=\"submit\" disabled={isLoading}>\n          Add contact\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n  padding: ${props => `${props.theme.space[1]}px`};\n`;\n\nexport const Input = styled.input`\n  width: 75%;\n  padding: ${props => `${props.theme.space[1]}px`};\n  &:not(:last-child) {\n    margin-bottom: ${props => `${props.theme.space[2]}px`};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { nanoid } from 'nanoid';\nimport { Box } from '../Box';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = ({ onChange }) => {\n  const filterID = nanoid();\n\n  const { register, watch } = useForm();\n\n  const watchFields = watch(['filter']);\n  onChange(watchFields);\n\n  useEffect(() => {\n    const subscription = watch((value, { name, type }) =>\n      console.log(value, name, type)\n    );\n    return () => subscription.unsubscribe();\n  }, [watch]);\n\n  return (\n    <Box\n      display=\"block\"\n      p={2}\n      mb={3}\n      bg=\"bgComponent\"\n      width=\"95%\"\n      borderRadius=\"normal\"\n      boxShadow=\"basic\"\n    >\n      <Label htmlFor={filterID}>Find contacts by last name</Label>\n      <Input id={filterID} type=\"text\" {...register('filter')} />\n    </Box>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.5fr;\n  padding: ${props => `${props.theme.space[0]}px`};\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: ${props => `${props.theme.space[1]}px`};\n  }\n`;\n\nexport const Name = styled.p`\n  margin-right: ${props => `${props.theme.space[1]}px`};\n`;\n\nexport const Number = styled.p``;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n// import { toast } from 'react-toastify';\nimport { Item, Name, Number } from './ContactItem.styled';\nimport { Button } from '../Button';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Name>{name + ':'}</Name>\n      <Number>{number}</Number>\n      <Button\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        // disabled={!isDeleting}\n      >\n        Delete\n        {/* {!isDeleting ? 'Deleting...' : 'Delete'} */}\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  createdAt: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Box } from 'components/Box';\nimport { List } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItem';\nimport { useContacts } from 'hooks';\n\nexport const ContactList = ({ list }) => {\n  const { items } = useContacts();\n\n  return (\n    <>\n      <h2>Contacts list</h2>\n      <p>{items && items.length > 0 && `Total count ${items.length}`}</p>\n      <Box\n        display=\"block\"\n        p={2}\n        bg=\"bgComponent\"\n        width={1}\n        borderRadius=\"normal\"\n        boxShadow=\"basic\"\n      >\n        <List>\n          {list\n            .map(item => <ContactItem key={item.id} {...item} />)\n            .sort((a, b) => a.props.name.localeCompare(b.props.name))}\n        </List>\n      </Box>\n    </>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts, addContact } from 'redux/contacts/operations';\nimport { changeFilter } from 'redux/contacts/actions';\nimport { useContacts } from 'hooks';\nimport { Title } from './ContactsView.styled';\nimport { Box } from 'components/Box';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\n\nexport const ContactsView = () => {\n  const dispatch = useDispatch();\n  const { isLoading, items, filter, error } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function handleSubmit({ name, number }) {\n    const checkName = items.some(\n      item => item.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n    checkName\n      ? alert(`${name} is already in contacts`)\n      : dispatch(\n          addContact({\n            name,\n            number,\n          })\n        );\n  }\n\n  function onFilterChange([value]) {\n    dispatch(changeFilter(value));\n  }\n\n  const filteredItems = useMemo(() => {\n    if (filter) {\n      return items.filter(item => {\n        return item.name\n          .toLowerCase()\n          .trim()\n          .includes(filter.toLowerCase().trim());\n      });\n    }\n    return items;\n  }, [filter, items]);\n\n  return (\n    <Box\n      width={1}\n      p={4}\n      as=\"main\"\n      paddingTop={75}\n      display=\"grid\"\n      gridTemplateColumns=\"1fr 1fr\"\n    >\n      <Box width={1}>\n        {error && <p>{error}</p>}\n        <Title>Add contact</Title>\n        <ContactForm onFormSubmit={handleSubmit} />\n        <h2>Find contact</h2>\n        <Filter onChange={onFilterChange} />\n      </Box>\n      <Box width={1}>\n        {isLoading && <p>Loading contacts...</p>}\n        {items && items.length > 0 && <ContactList list={filteredItems} />}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["Title","styled","props","theme","space","Form","Label","Input","ContactForm","onFormSubmit","isLoading","nameId","nanoid","phoneID","useForm","defaultValues","name","number","register","handleSubmit","reset","formState","errors","isSubmitSuccessful","useEffect","Box","display","p","mb","bg","width","borderRadius","boxShadow","onSubmit","data","htmlFor","id","type","title","required","pattern","role","message","Button","disabled","Filter","onChange","filterID","watch","subscription","value","console","log","unsubscribe","List","Item","Name","Number","ContactItem","dispatch","useDispatch","onClick","deleteContact","ContactList","list","items","useContacts","length","map","item","sort","a","b","localeCompare","ContactsView","filter","error","fetchContacts","filteredItems","useMemo","toLowerCase","trim","includes","as","paddingTop","gridTemplateColumns","some","alert","addContact","changeFilter"],"sourceRoot":""}